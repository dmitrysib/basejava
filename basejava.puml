@startuml

enum SectionType {
    PERSONAL
    OBJECTIVE
    ACHIEVEMENT
    QUALIFICATIONS
    EXPERIENCE
    EDUCATION
}

enum ContactType {
    PHONE
    EMAIL
    SKYPE
    WEBPAGE
    GITHUB
    LINKEDIN
}

class Resume {
    - uuid: String
    - fullName: String

    - contacts: Map<ContactType, Contact>
    - sections: Map<SectionType, AbstractSection<?>>

    + getUuid(): String
    + getFullName(): String

    + setSection(sectionType: SectionType, section: AbstractSection<?>)
    + setSections(sections: Map<SectionType, AbstractSection<?>>)
    + getSections(): Map<SectionType, AbstractSection<?>>

    + getContacts(): Map<ContactType, String>
    + setContacts(contacts: Map<ContactType, String>)
}

abstract class AbstractSection<ST> {
    #elements: List<ST>
}

class StringSection<String> extends AbstractSection {
    toString(): String
}

class ListSection<String> extends AbstractSection {
    toString(): String
}

together {
    class Link {
        - url: String
        - title: String

        toString(): String
    }

    class Experience {
        - link: Link
        - positions: List<Position>

        toString(): String
    }

    class Position {
        title: String
        startDate: LocalDate
        endDate: LocalDate
        description: String
    }
}

class Organization<Experience> extends AbstractSection {
    toString(): String
}

Resume *-- AbstractSection
Organization *-- Experience
Experience *-right- Link
Experience *-left- Position

@enduml